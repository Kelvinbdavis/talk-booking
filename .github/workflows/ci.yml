name: CI/CD Pipeline

on:
  push:
    paths:
      - 'ci_cd/python/Dockerfile' # Trigger on Dockerfile changes for build-python-ci-image
      - 'services/talk_booking/**/*' # Trigger on changes in services/talk_booking/
    branches:
      - main # Trigger only on pushes to main

  pull_request:
    paths:
      - 'services/talk_booking/**/*' # Trigger on PRs affecting services/talk_booking/
    branches:
      - main # Trigger only on PRs targeting main

jobs:
  # Docker Build and Push Job
  build-python-ci-image:
    if: github.event_name == 'push' # Ensure only triggered on pushes
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -f ci_cd/python/Dockerfile -t ghcr.io/kelvinbdavis/talk-booking:cicd-python3.11-slim .
          docker push ghcr.io/kelvinbdavis/talk-booking:cicd-python3.11-slim

  # Code Quality Job
  service-talk-booking-code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          cd services/talk-booking/
          poetry install

      - name: Run Code Quality Tools
        run: |
          poetry run flake8 .
          poetry run black . --check
          poetry run isort . --check-only --profile black
          poetry run bandit .
          poetry run safety check

  # Test Job
  service-talk-booking-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          cd services/talk-booking/
          poetry install

      - name: Run Tests with Coverage
        run: |
          cd services/talk-booking/
          poetry run python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/unit tests/integration

      - name: Upload Coverage Report to Codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -R services/talk-booking/

      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: services/talk-booking/report.xml
